# The base path of dex and the external name of the OpenID Connect service.
# This is the canonical URL that all clients MUST use to refer to dex. If a
# path is provided, dex's HTTP service will listen at a non-root URL.
issuer: http://127.0.0.1:4433/dex

# The storage configuration determines where dex stores its state. Supported
# options include SQL flavors and Kubernetes third party resources.
#
# See the documentation (https://dexidp.io/docs/storage/) for further information.
storage:
  type: sqlite3
  config:
    file: var/sqlite/dex.db

# Configuration for the HTTP endpoints.
web:
  http: 127.0.0.1:4433
  allowedOrigins: ["*"]

# Configuration for dex appearance
# frontend:
#   issuer: dex
#   logoURL: theme/logo.png
#   dir: web/
#   theme: light

telemetry:
  http: 127.0.0.1:5558

# grpc:
#   addr: 127.0.0.1:5557

oauth2:
  skipApprovalScreen: true
  alwaysShowLoginScreen: false

staticClients:
  - id: app-pkce
    redirectURIs:
      - "http://127.0.0.1:3000/callback"
    name: "Example App with PKCE"
    public: true

connectors:
  - type: google
    id: google
    name: Google
    config:
      issuer: https://accounts.google.com
      # Connector config values starting with a "$" will read from the environment.
      clientID: <your_client_id>
      clientSecret: <your_client_secret>
      redirectURI: "http://127.0.0.1:4433/dex/callback"
      hostedDomains:
        - casavo.com

# Let dex keep a list of passwords which can be used to login to dex.
enablePasswordDB: false
# A static list of passwords to login the end user. By identifying here, dex
# won't look in its underlying storage for passwords.
#
# If this option isn't chosen users may be added through the gRPC API.
# staticPasswords:
#   - email: "admin@example.com"
#     # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
#     hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
#     username: "admin"
#     userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
